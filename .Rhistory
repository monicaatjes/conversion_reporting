)
) %>%
dplyr::select(-Quarter) %>%
dplyr::group_by(Category, quarter, Device, Product, `Page path`) %>%
dplyr::summarise(
visits = sum(`Sessions (Adobe Analytics)`)
) %>%
tidyr::spread(`Page path`, visits) %>%
dplyr::rename(
"Start application" = `HB/ING Savings (account opening flow start)`,
"Finish application" = `HB/ING Savings (conversion page)`
)
## Adobe, current accounts with flow steps
RO_61 <- RO_6 %>%
dplyr::select( -...9, -...10, -...11, -...12) %>%
dplyr::mutate(
quarterz =
# let op deze case_when moet volgende x worden opgelost in de bron data
case_when(
is.na(...8) & Quarter =="Q1"~ paste("2022", Quarter, sep= " "),
TRUE ~ paste("2021", Quarter, sep= " ")
)) %>%
dplyr::mutate(
quarter = as.yearqtr(quarterz)
) %>%
dplyr::mutate(
Quarter= as.yearqtr(...8, format = "%Y-%m-%d")
) %>%
dplyr::mutate(
quarter =
case_when(
is.na(as.character(Quarter)) ~ quarterz,
TRUE ~ as.character(Quarter)
)
) %>%
dplyr::mutate(
quarter = as.yearqtr(quarter)
) %>%
dplyr::mutate(
Category = case_when(
str_detect(Category, "Current|Payment|Pay|Accounts") ~ "Current accounts",
str_detect(Category, "Invest|IP|Mutual") ~ "Investment products",
str_detect(Category, "Savings|Save") ~ "Savings",
str_detect(Category, "Mortgage") ~ "Mortgages",
str_detect(Category, "Lending|lending|Loan") ~ "Unsecured lending",
str_detect(Category, "insurance|Insurance") ~ "Insurances",
str_detect(Category, "other") ~ "Other"
)
) %>%
dplyr::mutate(Category = case_when(
Product =="Mutual Funds" ~ "Investment products",
Product =="ING Credit Ipotecar" ~ "Mortgages",
Product =="Mortgage Loan" ~ "Mortgages",
Product =="Card Complet" ~ "Current accounts",
Product =="ING Gold Card" ~ "Current accounts",
TRUE ~ Category
)
) %>%
dplyr::mutate(
Product = case_when(
str_detect(Product, "Card Complet") ~ "Current accounts",
str_detect(Product, "ING Gold Card") ~ "Current accounts",
str_detect(Product, "Current account") ~ "Current accounts",
str_detect(Product, "ING Credit Card") ~ "Credit Card",
str_detect(Product, "ING Credit de investitii|ING Credit Ipotecar|ING Prima Casa") ~ "Mortgage Loan",
str_detect(Product, "ING Savings") ~ "Savings",
str_detect(Product, "Personal Loan") ~ "ING Personal",
str_detect(Product, "Mutual") ~ "Mutual Funds",
TRUE ~ Product
)
) %>%
dplyr::mutate(
Device = case_when(
str_detect(`Device category`, "Desktop|desktop|Web") ~ "Desktop",
str_detect(`Device category`, "Mobile|mobile|app|App||tablet") ~ "Mobile",
TRUE ~ "Mobile"
)
) %>%
dplyr::select(-Quarter) %>%
dplyr::group_by(Category, quarter, Device, Product, `Page path`) %>%
dplyr::summarise(
visits = sum(`Sessions (Adobe Analytics)`)
) %>%
tidyr::spread(`Page path`, visits) %>%
dplyr::rename(
"Start application" = `HB/Account opening (flow start)`,
"Finish application" = `HB/Account opening conversion type 1`
) %>%
dplyr::select(-`HB/Account opening conversion type 2`)
# Combine both files: start and finish for savings and current accounts
RO_sav_complete1 <- dplyr::full_join(RO_61, RO_51) %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0))
# make sure that the start and finish from home bank en GA for specifically savings
# combine funnel flow steps with traffic Adobe file
RO_sav_complete1 <- dplyr::full_join(RO_sav_complete1, RO7) %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0))
RO2 <- RO_sav_complete1 %>%
dplyr::group_by(quarter, Category, Product, Device) %>%
dplyr::summarise(
`Start application` = sum(`Start application`),
`Finish application` = sum(`Finish application`),
`Product page` = sum(`Product page`)
)
# and add the # visits product page in total traffic (GA)
#RO2 <- dplyr::full_join(RO_sav_complete, RO_12, by=c("quarter", "Category", "Product"))
RO2$country <- "Romania"
RO2 <- RO2%>%
dplyr::mutate(
con_1 = round((`Start application` /`Product page`), digits=2),
con_2 = round((`Finish application` / `Start application`), digits=2)
) %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0))
### Germany
DE1 <- DE_4 %>%
dplyr::mutate(
year =substr(QUARTER, 1, 4),
quar =str_sub(QUARTER, 5)
) %>%
dplyr::mutate(
Quarter = paste(year, quar, sep=" Q")
) %>%
dplyr::mutate(
quarter = as.yearqtr(Quarter)
) %>%
dplyr::mutate(
Category = case_when(
str_detect(product, "Current|Payment") ~ "Current accounts",
str_detect(product, "Savings") ~ "Savings",
str_detect(product, "Mortgage") ~ "Mortgages",
str_detect(product, "Lending|lending|Loans") ~ "Unsecured lending",
str_detect(product, "Invest|IP") ~ "Investment products",
str_detect(product, "insurance|Insurance") ~ "Insurances",
str_detect(product, "other") ~ "Other"
)
) %>%
dplyr::mutate(product_detail = case_when(
PRODUCT_DETAIL == "IP" ~ "IP Standard",
TRUE ~ PRODUCT_DETAIL
)) %>%
dplyr::group_by(quarter, Category, PRODUCT_DETAIL) %>%
dplyr::summarise(
total_traffic= sum(product_page, na.rm = T)
) %>%
dplyr::mutate(
rank_order = rank(desc(total_traffic), ties.method = "first")
) %>%
dplyr::ungroup()
DE <- DE_4 %>%
dplyr::mutate(
year =substr(QUARTER, 1, 4),
quar =str_sub(QUARTER, 5)
) %>%
dplyr::mutate(
Quarter = paste(year, quar, sep=" Q")
) %>%
dplyr::mutate(
quarter = as.yearqtr(Quarter)
) %>%
dplyr::mutate(
Category = case_when(
str_detect(product, "Current|Payment") ~ "Current accounts",
str_detect(product, "Savings") ~ "Savings",
str_detect(product, "Mortgage") ~ "Mortgages",
str_detect(product, "Lending|lending|Loans") ~ "Unsecured lending",
str_detect(product, "Invest|IP") ~ "Investment products",
str_detect(product, "insurance|Insurance") ~ "Insurances",
str_detect(product, "other") ~ "Other"
)
) %>%
dplyr::mutate(DEVICE = case_when(
DEVICE=="NativeApp" ~ "Mobile",
TRUE ~ DEVICE
)) %>%
dplyr::mutate(product_detail = case_when(
PRODUCT_DETAIL == "IP" ~ "IP Standard",
TRUE ~ PRODUCT_DETAIL
)) %>%
dplyr::group_by(quarter, PRODUCT_DETAIL, DEVICE, NEW_TO_BANK) %>%
dplyr::summarise(
CATEGORY = sum(category),
PRODUCT_PAGE = sum(product_page),
BASKET = sum(basket),
WEB_COMPLETE = sum(web_complete),
ACCOUNT = sum(account)
) %>%
dplyr::ungroup()
DE2 <- dplyr::left_join(DE, DE1, by=c("quarter", "PRODUCT_DETAIL"))
DE2 <- DE2 %>%
dplyr::select(quarter, CATEGORY, rank_order, DEVICE, Category,
NEW_TO_BANK, PRODUCT_PAGE, PRODUCT_DETAIL, BASKET, WEB_COMPLETE, ACCOUNT) %>%
dplyr::group_by(quarter, Category, PRODUCT_DETAIL, rank_order, DEVICE, NEW_TO_BANK) %>%
dplyr::summarise(
CATEGORY = sum(CATEGORY),
PRODUCT_PAGE = sum(PRODUCT_PAGE),
BASKET = sum(BASKET),
WEB_COMPLETE = sum(WEB_COMPLETE),
ACCOUNT = sum(ACCOUNT)
) %>%
dplyr::mutate(
con_1 = round((BASKET / PRODUCT_PAGE),digits=2),
con_2 = round((WEB_COMPLETE/ BASKET), digits=2)
) %>%
rename("Category page" =CATEGORY,
"Product page" =PRODUCT_PAGE,
"Start application" =BASKET,
"Finish application" =WEB_COMPLETE,
"Account opening" = ACCOUNT,
"NewvsCurrent" =NEW_TO_BANK,
"Device" =DEVICE,
"Product" = PRODUCT_DETAIL) %>%
dplyr::mutate(NewvsCurrent = case_when(
NewvsCurrent ==0 ~ "Customer",
NewvsCurrent ==1 ~ "N2B"
)) %>%
dplyr::group_by(Device, NewvsCurrent, quarter, Category) %>%
tidyr::fill(`Category page`, .direction = "downup") %>%
dplyr::ungroup() %>%
dplyr::group_by(Device, NewvsCurrent, quarter, Category) %>%
tidyr::fill(`Product page`, .direction = "updown") %>%
dplyr::mutate(
con_1 = round((`Start application`/ `Product page`),digits=2),
con_2 = round((`Finish application`/ `Start application`), digits=2)
) %>%
dplyr::ungroup() %>%
dplyr::filter(rank_order< 4) %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%
dplyr::filter(con_1>0)
DE2$country <- "Germany"
# Add product specifically
IT1 <- IT %>%
dplyr::mutate(
quarter = as.yearqtr(Date, format = "%Y-%m-%d")
) %>%
dplyr::select(-Date) %>%
dplyr::mutate(
Product = case_when(
Category == "Instant" ~ "Instant lending",
Category == "Not instant" ~ "Lending",
TRUE ~ Product
)
) %>%
dplyr::select(-Category) %>%
dplyr::mutate(
Category = case_when(
str_detect(Product, "Current") ~ "Current accounts",
str_detect(Product, "Savings") ~ "Savings",
str_detect(Product, "Mortgage|Mortage") ~ "Mortgages",
str_detect(Product, "Lending|lending") ~ "Unsecured lending",
str_detect(Product, "Invest|My|Trading|self|Investment") ~ "Investment products",
str_detect(Product, "insurance|Insurance") ~ "Insurances"
)
) %>%
dplyr::mutate(
Page = case_when(
str_detect(Page, "start|Start|started") ~ "Start application",
str_detect(Page, "category|Category|Cartegory") ~ "Category page",
str_detect(Page, "finish|Finish|completed") ~ "Finish application",
str_detect(Page, "product|Product|landing|Landing") ~ "Product page",
str_detect(Page, "account|approved") ~ "Account opening",
TRUE ~ "Category page"
)
) %>%
dplyr::mutate(
NewvsCurrent = case_when(
str_detect(`N2B/ Customer`, "customer|Customer") ~ "Customer",
str_detect(`N2B/ Customer`, "N2B|n2b|new|Common") ~ "N2B",
Product =="MyMoneyCoach" ~ "Customer",
Product =="Investment in self" ~ "Customer",
TRUE ~ "N2B"
)
) %>%
dplyr::select(-`N2B/ Customer`) %>%
dplyr::mutate(
Device = case_when(
str_detect(Device, "Desktop|desktop") ~ "Desktop",
str_detect(Device, "Mobile|mobile|app|App") ~ "Mobile",
TRUE ~ "Desktop"
)
) %>%
dplyr::group_by(quarter, Category, Product) %>%
dplyr::summarise(
total_traffic= sum(Visits, na.rm = T)
) %>%
dplyr::mutate(
rank_order = rank(desc(total_traffic), ties.method = "first")
) %>%
dplyr::ungroup()
IT3 <- IT %>%
# dplyr::select(-...8) %>%
dplyr::mutate(
quarter = as.yearqtr(Date, format = "%Y-%m-%d")
) %>%
dplyr::select(-Date) %>%
dplyr::mutate(
Product = case_when(
Category == "Instant" ~ "Instant lending",
Category == "Not instant" ~ "Lending",
TRUE ~ Product
)
) %>%
dplyr::select(-Category) %>%
dplyr::mutate(
Category = case_when(
str_detect(Product, "Current") ~ "Current accounts",
str_detect(Product, "Savings") ~ "Savings",
str_detect(Product, "Mortgage|Mortage") ~ "Mortgages",
str_detect(Product, "Lending|lending") ~ "Unsecured lending",
str_detect(Product, "Invest|My|Trading|self|Investment") ~ "Investment products",
str_detect(Product, "insurance|Insurance") ~ "Insurances"
)
) %>%
dplyr::mutate(
Page = case_when(
str_detect(Page, "start|Start|started") ~ "Start application",
str_detect(Page, "category|Category|Cartegory") ~ "Category page",
str_detect(Page, "finish|Finish|completed") ~ "Finish application",
str_detect(Page, "product|Product|landing|Landing") ~ "Product page",
str_detect(Page, "account|approved") ~ "Account opening",
TRUE ~ "Category page"
)
) %>%
dplyr::mutate(
NewvsCurrent = case_when(
str_detect(`N2B/ Customer`, "customer|Customer") ~ "Customer",
str_detect(`N2B/ Customer`, "N2B|n2b|new|Common") ~ "N2B",
Product =="MyMoneyCoach" ~ "Customer",
Product =="Investment in self" ~ "Customer",
TRUE ~ "N2B"
)
) %>%
dplyr::select(-`N2B/ Customer`) %>%
dplyr::mutate(
Device = case_when(
str_detect(Device, "Desktop|desktop") ~ "Desktop",
str_detect(Device, "Mobile|mobile|app|App") ~ "Mobile",
TRUE ~ "Desktop"
)
) %>%
dplyr::group_by(quarter, Category, Product, Page, Device, NewvsCurrent) %>%
dplyr::summarise(
Visits =sum(Visits)
) %>%
dplyr::ungroup()
IT2 <- dplyr::left_join(IT1, IT3, by=c("quarter", "Category", "Product"))
IT2 <- IT2 %>%
tidyr::spread(Page, Visits) %>%
dplyr::group_by(quarter, Device, NewvsCurrent, Category) %>%
tidyr::fill(`Product page`, .direction = "downup") %>%
dplyr::ungroup() %>%
dplyr::mutate(
con_1 = round((`Start application` /`Product page`), digits=2),
con_2 = round((`Finish application` / `Start application`), digits=2)
) %>%
dplyr::group_by(quarter, Device, NewvsCurrent, Category) %>%
tidyr::fill(`Product page`, .direction = "downup") %>%
dplyr::ungroup() %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0))
IT2$country <- "Italy"
########### Combine and cross analysis ################
# Countries: IT, PL, DE, SP, RO
data_tot <- dplyr::full_join(IT2, PO2)
data_tot <- dplyr::full_join(data_tot, DE2)
data_tot <- dplyr::full_join(data_tot, SP2)
data_tot <- dplyr::full_join(data_tot, RO2)
data_tot <- dplyr::full_join(data_tot, NL2)
data_tot <- dplyr::full_join(data_tot, BE2)
data_tot <- dplyr::full_join(data_tot, AUS2)
# Add conversion tot
data_tot <- data_tot %>%
dplyr::mutate(
conv_tot = round(`Finish application` / `Product page`, digits=2)*100,
con_1 = con_1 * 100,
con_2 = con_2 * 100
)  %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0))
# Create dataset for overviews
data_overviews <- data_tot %>%
dplyr::arrange(quarter) %>%
dplyr::mutate(country = case_when(
country=="The Netherlands" ~ "NL",
TRUE ~ country
)) %>%
#dplyr::filter(rank_order==1 | rank_order==2 | rank_order ==3) %>%
dplyr::filter(Device =="Mobile" |Device =="Desktop") %>%
dplyr::group_by(quarter, country, Category, Device, Product, rank_order, NewvsCurrent) %>%
dplyr::summarise(
`Category page` = sum(`Category page`, na.rm=T),
`Product page` = sum(`Product page`, na.rm=T),
`Start application` = sum(`Start application`, na.rm=T),
`Finish application` = sum(`Finish application`, na.rm=T),
`Account opening` = sum(`Account opening`, na.rm=T)
) %>%
dplyr::ungroup () %>%
dplyr::mutate(
con_1 = round((`Start application` /`Product page`), digits=2),
con_2 = round((`Finish application` / `Start application`), digits=2),
conv_tot = round(`Finish application` / `Product page`, digits=2),
) %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%
dplyr::arrange(quarter) %>%
dplyr::group_by(country, Category, Device, Product, rank_order, NewvsCurrent) %>%
dplyr::mutate(
QoQ_con_1 = con_1 - lag(con_1),
QoQ_con_2 = con_2 - lag(con_2),
QoQ_con_tot = conv_tot - lag(conv_tot)
) %>%
dplyr::ungroup()
## Create little QPC slice of data overviews
# Run this and copy to excel for customers
data_overviews_test_customer <- data_overviews %>%
dplyr::mutate(
Category= case_when(
Category =="Current accounts" ~"CA",
Category =="Savings" ~"SV",
Category =="Insurances" ~"IN",
Category =="Investment products" ~"IP",
Category =="Investing" ~"IP",
Category =="Mortgages" ~"MG",
Category =="Unsecured lending" ~"UL"
)
) %>%
dplyr::mutate(comb_name = paste(Category, Product, sep="_", collapse=NULL)) %>%
dplyr::select(quarter, country, Category, comb_name, Device,
NewvsCurrent, rank_order, `Product page`, `Start application`, `Finish application`,
con_1, con_2, conv_tot, QoQ_con_tot, QoQ_con_1, QoQ_con_2
) %>%
gather(variable, value, -(quarter:rank_order)) %>%
unite(temp, Device, variable) %>%
spread(temp, value) %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%
dplyr::arrange(quarter) %>%
dplyr::filter(quarter == max(quarter) & quarter !="2021 Q4") %>%
dplyr::select(quarter, country, comb_name, NewvsCurrent, rank_order, starts_with("Mobile"))
# Run this and copy to excel for N2B
data_overviews_test_n2b <- data_overviews %>%
dplyr::mutate(
Category= case_when(
Category =="Current accounts" ~"CA",
Category =="Savings" ~"SV",
Category =="Insurances" ~"IN",
Category =="Investment products" ~"IP",
Category =="Mortgages" ~"MG",
Category =="Unsecured lending" ~"UL"
)
) %>%
dplyr::mutate(comb_name = paste(Category, Product, sep="_", collapse=NULL)) %>%
dplyr::select(quarter, country, Category, comb_name, Device,
NewvsCurrent, rank_order, `Product page`, `Start application`, `Finish application`,
con_1, con_2, conv_tot, QoQ_con_tot, QoQ_con_1, QoQ_con_2
) %>%
gather(variable, value, -(quarter:rank_order)) %>%
unite(temp, Device, variable) %>%
spread(temp, value) %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%
dplyr::arrange(quarter) %>%
dplyr::filter(quarter == max(quarter) & quarter !="2021 Q4") %>%
dplyr::filter(NewvsCurrent=="N2B")
x <- data_overviews %>%
dplyr::mutate(
Category= case_when(
Category =="Current accounts" ~"CA",
Category =="Savings" ~"SV",
Category =="Insurances" ~"IN",
Category =="Investment products" ~"IP",
Category =="Mortgages" ~"MG",
Category =="Unsecured lending" ~"UL"
)
) %>%
dplyr::mutate(comb_name = paste(Category, Product, sep="_", collapse=NULL)) %>%
dplyr::select(quarter, country, Category, comb_name, Device,
NewvsCurrent, rank_order, `Product page`, `Start application`, `Finish application`,
con_1, con_2, conv_tot, QoQ_con_tot, QoQ_con_1, QoQ_con_2
) %>%
gather(variable, value, -(quarter:rank_order)) %>%
unite(temp, Device, variable) %>%
spread(temp, value) %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%
dplyr::arrange(quarter) %>%
dplyr::filter(quarter == max(quarter) & quarter !="2021 Q4") %>%
dplyr::filter(NewvsCurrent=="Customer" & rank_order==1) %>%
dplyr::filter(country=="Australia")
### Clean up memory
rm(RO_51, RO_sav_complete1, RO2, RO5, RO6, RO7, SP, SP1, SP2, SP3, transBE, transBE1, transBE2)
rm(IT1, PL_SA_1, PL_SA_2, PL_UL, PL_UL_1, PL_UL_2, PL1, PL2, PO2, RO_4, RO_5, RO_6, RO_61)
rm(AUS, IT2, PL_IN_2, PL_IP, PL_IP_1, PL_IP_2, PL_IP3, PL_SA)
rm(DE1, DE2, IT, IT2, IT3, NL_adobe_FLOW, NL_adobe_FLOW1, NL_adobe_PP, NL_adobe_PP_DT_app)
rm(NL_adobe_PP_DT_mob, NL_adobe_PP_ranking, NL2, PL, PL_CA, PL_CA_1, PL_CA_2, PL_IN, PL_IN_1)
rm(AUS, IT2, PL_IN_2, PL_IP, PL_IP_1, PL_IP_2, PL_IP3, PL_SA, PL_SA)
rm(AUS11, AUS12, Aussie1, Aussie2, BE, BE_1, BE_2, BE_3, BE_4, BE_try, BE2, DE, DE_1, DE_2, DE_3, DE_4)
rm(AU2, AUS_try, AUS1, AUS10, AUS2, AUS3, AUS4, AUS5, AUS6, AUS7, AUS8, AUS9, Aussie )
rm(AU11, AUS12, Aussie1, Aussie2, BE, BE_1, BE_2, BE_3, BE_4, BE_try, BE2, DE, DE_1, DE_2)
rm(AU2, AUS_try, AUS1, AUS10, AUS2, AUS3, AUS4, AUS5, AUS5, AUS6, AUS7, AUS8, AUS9, Aussie)
rm(x)
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/inst/rmarkdown/templates/QPC_template/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/inst/rmarkdown/templates/QPC_template/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/inst/rmarkdown/templates/QPC_template/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/inst/rmarkdown/templates/QPC_template/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/inst/rmarkdown/templates/QPC_template/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/inst/rmarkdown/templates/QPC_template/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/inst/rmarkdown/templates/QPC_template/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/inst/rmarkdown/templates/QPC_template/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/inst/rmarkdown/templates/QPC_template/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/inst/rmarkdown/templates/QPC_template/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/inst/rmarkdown/templates/QPC_template/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/inst/rmarkdown/templates/QPC_template/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q22_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q22_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q22_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q22_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q22_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q22_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q22_time.Rmd", output_file = "draft_Q2_time.html")
