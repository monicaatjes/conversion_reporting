str_detect(Product, "Invest|My|Trading|self|Investment") ~ "Investment products",
str_detect(Product, "insurance|Insurance") ~ "Insurances"
)
) %>%
dplyr::mutate(
Page = case_when(
str_detect(Page, "start|Start|started") ~ "Start application",
str_detect(Page, "category|Category|Cartegory") ~ "Category page",
str_detect(Page, "finish|Finish|completed") ~ "Finish application",
str_detect(Page, "product|Product|landing|Landing") ~ "Product page",
str_detect(Page, "account|approved") ~ "Account opening",
TRUE ~ "Category page"
)
) %>%
dplyr::mutate(
NewvsCurrent = case_when(
str_detect(`N2B/ Customer`, "customer|Customer") ~ "Customer",
str_detect(`N2B/ Customer`, "N2B|n2b|new|Common") ~ "N2B",
Product =="MyMoneyCoach" ~ "Customer",
Product =="Investment in self" ~ "Customer",
TRUE ~ "N2B"
)
) %>%
dplyr::select(-`N2B/ Customer`) %>%
dplyr::mutate(
Device = case_when(
str_detect(Device, "Desktop|desktop") ~ "Desktop",
str_detect(Device, "Mobile|mobile|app|App") ~ "Mobile",
TRUE ~ "Desktop"
)
) %>%
dplyr::group_by(quarter, Category, Product) %>%
dplyr::summarise(
total_traffic= sum(Visits, na.rm = T)
) %>%
dplyr::mutate(
rank_order = rank(desc(total_traffic), ties.method = "first")
) %>%
dplyr::ungroup()
IT3 <- IT %>%
# dplyr::select(-...8) %>%
dplyr::mutate(
quarter = as.yearqtr(Date, format = "%Y-%m-%d")
) %>%
dplyr::select(-Date) %>%
dplyr::mutate(
Product = case_when(
Category == "Instant" ~ "Instant lending",
Category == "Not instant" ~ "Lending",
TRUE ~ Product
)
) %>%
dplyr::select(-Category) %>%
dplyr::mutate(
Category = case_when(
str_detect(Product, "Current") ~ "Current accounts",
str_detect(Product, "Savings") ~ "Savings",
str_detect(Product, "Mortgage|Mortage") ~ "Mortgages",
str_detect(Product, "Lending|lending") ~ "Unsecured lending",
str_detect(Product, "Invest|My|Trading|self|Investment") ~ "Investment products",
str_detect(Product, "insurance|Insurance") ~ "Insurances"
)
) %>%
dplyr::mutate(
Page = case_when(
str_detect(Page, "start|Start|started") ~ "Start application",
str_detect(Page, "category|Category|Cartegory") ~ "Category page",
str_detect(Page, "finish|Finish|completed") ~ "Finish application",
str_detect(Page, "product|Product|landing|Landing") ~ "Product page",
str_detect(Page, "account|approved") ~ "Account opening",
TRUE ~ "Category page"
)
) %>%
dplyr::mutate(
NewvsCurrent = case_when(
str_detect(`N2B/ Customer`, "customer|Customer") ~ "Customer",
str_detect(`N2B/ Customer`, "N2B|n2b|new|Common") ~ "N2B",
Product =="MyMoneyCoach" ~ "Customer",
Product =="Investment in self" ~ "Customer",
TRUE ~ "N2B"
)
) %>%
dplyr::select(-`N2B/ Customer`) %>%
dplyr::mutate(
Device = case_when(
str_detect(Device, "Desktop|desktop") ~ "Desktop",
str_detect(Device, "Mobile|mobile|app|App") ~ "Mobile",
TRUE ~ "Desktop"
)
) %>%
dplyr::group_by(quarter, Category, Product, Page, Device, NewvsCurrent) %>%
dplyr::summarise(
Visits =sum(Visits)
) %>%
dplyr::ungroup()
IT2 <- dplyr::left_join(IT1, IT3, by=c("quarter", "Category", "Product"))
IT2 <- IT2 %>%
tidyr::spread(Page, Visits) %>%
dplyr::group_by(quarter, Device, NewvsCurrent, Category) %>%
tidyr::fill(`Product page`, .direction = "downup") %>%
dplyr::ungroup() %>%
dplyr::mutate(
con_1 = round((`Start application` /`Product page`), digits=2),
con_2 = round((`Finish application` / `Start application`), digits=2)
) %>%
dplyr::group_by(quarter, Device, NewvsCurrent, Category) %>%
tidyr::fill(`Product page`, .direction = "downup") %>%
dplyr::ungroup() %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0))
IT2$country <- "Italy"
########### Combine and cross analysis ################
# Countries: IT, PL, DE, SP, RO
data_tot <- dplyr::full_join(IT2, PO2)
data_tot <- dplyr::full_join(data_tot, DE2)
data_tot <- dplyr::full_join(data_tot, SP2)
data_tot <- dplyr::full_join(data_tot, RO2)
data_tot <- dplyr::full_join(data_tot, NL2)
data_tot <- dplyr::full_join(data_tot, BE2)
data_tot <- dplyr::full_join(data_tot, AUS2)
# Add conversion tot
data_tot <- data_tot %>%
dplyr::mutate(
conv_tot = round(`Finish application` / `Product page`, digits=2)*100,
con_1 = con_1 * 100,
con_2 = con_2 * 100
)  %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0))
# Create dataset for overviews
data_overviews <- data_tot %>%
dplyr::arrange(quarter) %>%
dplyr::mutate(country = case_when(
country=="The Netherlands" ~ "NL",
TRUE ~ country
)) %>%
#dplyr::filter(rank_order==1 | rank_order==2 | rank_order ==3) %>%
dplyr::filter(Device =="Mobile" |Device =="Desktop") %>%
dplyr::group_by(quarter, country, Category, Device, Product, rank_order, NewvsCurrent) %>%
dplyr::summarise(
`Category page` = sum(`Category page`, na.rm=T),
`Product page` = sum(`Product page`, na.rm=T),
`Start application` = sum(`Start application`, na.rm=T),
`Finish application` = sum(`Finish application`, na.rm=T),
`Account opening` = sum(`Account opening`, na.rm=T)
) %>%
dplyr::ungroup () %>%
dplyr::mutate(
con_1 = round((`Start application` /`Product page`), digits=2),
con_2 = round((`Finish application` / `Start application`), digits=2),
conv_tot = round(`Finish application` / `Product page`, digits=2),
) %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%
dplyr::arrange(quarter) %>%
dplyr::group_by(country, Category, Device, Product, rank_order, NewvsCurrent) %>%
dplyr::mutate(
QoQ_con_1 = con_1 - lag(con_1),
QoQ_con_2 = con_2 - lag(con_2),
QoQ_con_tot = conv_tot - lag(conv_tot)
) %>%
dplyr::ungroup()
## Create little QPC slice of data overviews
# Run this and copy to excel for customers
data_overviews_test_customer <- data_overviews %>%
dplyr::mutate(
Category= case_when(
Category =="Current accounts" ~"CA",
Category =="Savings" ~"SV",
Category =="Insurances" ~"IN",
Category =="Investment products" ~"IP",
Category =="Investing" ~"IP",
Category =="Mortgages" ~"MG",
Category =="Unsecured lending" ~"UL"
)
) %>%
dplyr::mutate(comb_name = paste(Category, Product, sep="_", collapse=NULL)) %>%
dplyr::select(quarter, country, Category, comb_name, Device,
NewvsCurrent, rank_order, `Product page`, `Start application`, `Finish application`,
con_1, con_2, conv_tot, QoQ_con_tot, QoQ_con_1, QoQ_con_2
) %>%
gather(variable, value, -(quarter:rank_order)) %>%
unite(temp, Device, variable) %>%
spread(temp, value) %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%
dplyr::arrange(quarter) %>%
dplyr::filter(quarter == max(quarter) & quarter !="2021 Q4") %>%
dplyr::select(quarter, country, comb_name, NewvsCurrent, rank_order, starts_with("Mobile"))
# Run this and copy to excel for N2B
data_overviews_test_n2b <- data_overviews %>%
dplyr::mutate(
Category= case_when(
Category =="Current accounts" ~"CA",
Category =="Savings" ~"SV",
Category =="Insurances" ~"IN",
Category =="Investment products" ~"IP",
Category =="Mortgages" ~"MG",
Category =="Unsecured lending" ~"UL"
)
) %>%
dplyr::mutate(comb_name = paste(Category, Product, sep="_", collapse=NULL)) %>%
dplyr::select(quarter, country, Category, comb_name, Device,
NewvsCurrent, rank_order, `Product page`, `Start application`, `Finish application`,
con_1, con_2, conv_tot, QoQ_con_tot, QoQ_con_1, QoQ_con_2
) %>%
gather(variable, value, -(quarter:rank_order)) %>%
unite(temp, Device, variable) %>%
spread(temp, value) %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%
dplyr::arrange(quarter) %>%
dplyr::filter(quarter == max(quarter) & quarter !="2021 Q4") %>%
dplyr::filter(NewvsCurrent=="N2B")
x <- data_overviews %>%
dplyr::mutate(
Category= case_when(
Category =="Current accounts" ~"CA",
Category =="Savings" ~"SV",
Category =="Insurances" ~"IN",
Category =="Investment products" ~"IP",
Category =="Mortgages" ~"MG",
Category =="Unsecured lending" ~"UL"
)
) %>%
dplyr::mutate(comb_name = paste(Category, Product, sep="_", collapse=NULL)) %>%
dplyr::select(quarter, country, Category, comb_name, Device,
NewvsCurrent, rank_order, `Product page`, `Start application`, `Finish application`,
con_1, con_2, conv_tot, QoQ_con_tot, QoQ_con_1, QoQ_con_2
) %>%
gather(variable, value, -(quarter:rank_order)) %>%
unite(temp, Device, variable) %>%
spread(temp, value) %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%
dplyr::arrange(quarter) %>%
dplyr::filter(quarter == max(quarter) & quarter !="2021 Q4") %>%
dplyr::filter(NewvsCurrent=="Customer" & rank_order==1) %>%
dplyr::filter(country=="Australia")
### Clean up memory
rm(RO_51, RO_sav_complete1, RO2, RO5, RO6, RO7, SP, SP1, SP2, SP3, transBE, transBE1, transBE2)
rm(IT1, PL_SA_1, PL_SA_2, PL_UL, PL_UL_1, PL_UL_2, PL1, PL2, PO2, RO_4, RO_5, RO_6, RO_61)
rm(AUS, IT2, PL_IN_2, PL_IP, PL_IP_1, PL_IP_2, PL_IP3, PL_SA)
rm(DE1, DE2, IT, IT2, IT3, NL_adobe_FLOW, NL_adobe_FLOW1, NL_adobe_PP, NL_adobe_PP_DT_app)
rm(NL_adobe_PP_DT_mob, NL_adobe_PP_ranking, NL2, PL, PL_CA, PL_CA_1, PL_CA_2, PL_IN, PL_IN_1)
rm(AUS, IT2, PL_IN_2, PL_IP, PL_IP_1, PL_IP_2, PL_IP3, PL_SA, PL_SA)
rm(AUS11, AUS12, Aussie1, Aussie2, BE, BE_1, BE_2, BE_3, BE_4, BE_try, BE2, DE, DE_1, DE_2, DE_3, DE_4)
rm(AU2, AUS_try, AUS1, AUS10, AUS2, AUS3, AUS4, AUS5, AUS6, AUS7, AUS8, AUS9, Aussie )
rm(AU11, AUS12, Aussie1, Aussie2, BE, BE_1, BE_2, BE_3, BE_4, BE_try, BE2, DE, DE_1, DE_2)
rm(AU2, AUS_try, AUS1, AUS10, AUS2, AUS3, AUS4, AUS5, AUS5, AUS6, AUS7, AUS8, AUS9, Aussie)
rm(x)
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
source("functions/funnel_plot_format_function.R")
source("functions/time_plot_format_function.R")
source("functions/post_stamp_function.R")
source("functions/post_stamp_function_option2.R")
source("functions/tab_function.R")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
knitr::opts_chunk$set(echo = TRUE, fig.align = "left")
funnel_plot <- data_tot  %>%
dplyr::filter(Category=="Investment products") %>%
dplyr::filter(country=="The Netherlands") %>%
dplyr::filter(quarter == max(quarter, na.rm=T)) %>%
#dplyr::filter(NewvsCurrent=="N2B") %>%
dplyr::filter(rank_order==1)
funnel_plot1 <- funnel_plot_format_function(funnel_plot)
funnel_plot1
time_plot <- data_tot %>%
dplyr::filter(Category=="Investment products") %>%
dplyr::filter(country=="The Netherlands") %>%
#dplyr::filter(is.na(NewvsCurrent)) %>%
dplyr::filter(rank_order==1) %>%
# dplyr::filter(quarter > min(quarter)) %>%
dplyr::filter(quarter >"2021 Q2") %>%
dplyr::filter(Device =="Mobile" | Device == "Desktop")
time_plot1 <- time_plot_format_function(time_plot)
time_plot1
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q2_time.Rmd", output_file = "draft_Q2_time.html")
time_plot <- data_tot %>%
dplyr::filter(Category=="Investment products") %>%
dplyr::filter(country=="The Netherlands") %>%
#dplyr::filter(is.na(NewvsCurrent)) %>%
dplyr::filter(rank_order==1) %>%
# dplyr::filter(quarter > min(quarter)) %>%
dplyr::filter(quarter >"2021 Q2") %>%
dplyr::filter(Device =="Mobile" | Device == "Desktop")
time_plot1 <- time_plot_format_function(time_plot)
time_plot1
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q22_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q22_time.Rmd", output_file = "draft_Q2_time.html")
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q22_time.Rmd", output_file = "draft_Q2_time.html")
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Mortgages") %>%
dplyr::filter(country== "Romania") %>%
dplyr::filter(quarter == max(quarter, na.rm=T))
View(funnel_plot)
time_plot <- data_tot %>%
dplyr::filter(Category=="Mortgages") %>%
dplyr::filter(country==str_extract("![](/Users/xo21bm/Documents/Lokaal/BAM2/exploration/notebooks/RO.png) Romania", '\\b\\w+$')) %>%
#dplyr::filter(NewvsCurrent=="Customer") %>%
# dplyr::filter(rank_order==1) %>%
dplyr::filter(quarter > max(quarter)-1)
time_plot1 <- time_plot_format_function(time_plot)
time_plot1
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Mortgages") %>%
dplyr::filter(country== "Romania") %>%
dplyr::filter(quarter == max(quarter, na.rm=T))
#%>%
# dplyr::filter(rank_order==1)
funnel_plot1 <- funnel_plot_format_function(funnel_plot)
funnel_plot1
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q22_time.Rmd", output_file = "draft_Q2_time.html")
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Current accounts") %>%
dplyr::filter(country=="Romania") %>%
dplyr::filter(quarter == max(quarter, na.rm=T))
#%>%
#dplyr::filter(rank_order==1)
funnel_plot1 <- funnel_plot_format_function(funnel_plot)
funnel_plot1
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Savings") %>%
dplyr::filter(country=="Romania") %>%
dplyr::filter(quarter == max(quarter, na.rm=T))
#%>%
#dplyr::filter(rank_order==2)
funnel_plot1 <- funnel_plot_format_function(funnel_plot)
View(funnel_plot)
time_plot <- data_tot %>%
dplyr::filter(Category=="Savings") %>%
dplyr::filter(country==str_extract("![](/Users/xo21bm/Documents/Lokaal/BAM2/exploration/notebooks/RO.png) Romania", '\\b\\w+$')) %>%
#dplyr::filter(NewvsCurrent=="Customer") %>%
dplyr::filter(Product =="Savings")
dplyr::filter(quarter > max(quarter)-1)
time_plot <- data_tot %>%
dplyr::filter(Category=="Savings") %>%
dplyr::filter(country==str_extract("![](/Users/xo21bm/Documents/Lokaal/BAM2/exploration/notebooks/RO.png) Romania", '\\b\\w+$')) %>%
#dplyr::filter(NewvsCurrent=="Customer") %>%
dplyr::filter(Product =="Savings") %>%
dplyr::filter(quarter > max(quarter)-1)
time_plot1 <- time_plot_format_function(time_plot)
time_plot1
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Investment products") %>%
dplyr::filter(country=="Romania") %>%
dplyr::filter(quarter == max(quarter, na.rm=T)) %>%
dplyr::filter(rank_order==1)
funnel_plot1 <- funnel_plot_format_function(funnel_plot)
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Investment products") %>%
dplyr::filter(country=="Romania") %>%
dplyr::filter(quarter == max(quarter, na.rm=T))# %>%
#dplyr::filter(rank_order==1)
funnel_plot1 <- funnel_plot_format_function(funnel_plot)
funnel_plot1
time_plot <- data_tot %>%
dplyr::filter(Category=="Investment products") %>%
dplyr::filter(country==str_extract("![](/Users/xo21bm/Documents/Lokaal/BAM2/exploration/notebooks/RO.png) Romania", '\\b\\w+$')) %>%
#dplyr::filter(NewvsCurrent=="Customer") #%>%
#dplyr::filter(rank_order==1) %>%
dplyr::filter(quarter > max(quarter)-1)
time_plot1 <- time_plot_format_function(time_plot)
time_plot1
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Unsecured lending") %>%
dplyr::filter(country=="Romania") %>%
dplyr::filter(quarter == max(quarter, na.rm=T)) #%>%
#dplyr::filter(rank_order==1)
funnel_plot1 <- funnel_plot_format_function(funnel_plot)
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Unsecured lending") %>%
dplyr::filter(country=="Romania")
View(funnel_plot)
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Unsecured lending") %>%
dplyr::filter(country=="Romania") %>%
dplyr::filter(Product =="ING Personal") %>%
dplyr::filter(quarter == max(quarter, na.rm=T)) #%>%
#dplyr::filter(rank_order==1)
funnel_plot1 <- funnel_plot_format_function(funnel_plot)
funnel_plot1
time_plot <- data_tot %>%
dplyr::filter(Category=="Unsecured lending") %>%
dplyr::filter(country==str_extract("![](/Users/xo21bm/Documents/Lokaal/BAM2/exploration/notebooks/RO.png) Romania", '\\b\\w+$')) %>%
#dplyr::filter(NewvsCurrent=="Customer") %>%
dplyr::filter(Product =="ING Personal") %>%
#dplyr::filter(rank_order==1) %>%
dplyr::filter(quarter > max(quarter)-1)
time_plot1 <- time_plot_format_function(time_plot)
time_plot1
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Unsecured lending") %>%
dplyr::filter(country=="Romania") %>%
dplyr::filter(quarter == max(quarter, na.rm=T)) %>%
# dplyr::filter(rank_order==2)
dplyr::filter(Product =="Credit card") %>%
funnel_plot1 <- funnel_plot_format_function(funnel_plot)
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Unsecured lending") %>%
dplyr::filter(country=="Romania") %>%
dplyr::filter(quarter == max(quarter, na.rm=T)) %>%
# dplyr::filter(rank_order==2)
dplyr::filter(Product =="Credit card")
funnel_plot1 <- funnel_plot_format_function(funnel_plot)
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Unsecured lending") %>%
dplyr::filter(country=="Romania") %>%
dplyr::filter(quarter == max(quarter, na.rm=T))
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Unsecured lending") %>%
dplyr::filter(country=="Romania") %>%
dplyr::filter(quarter == max(quarter, na.rm=T)) %>%
# dplyr::filter(rank_order==2)
dplyr::filter(Product =="Credit Card")
funnel_plot1 <- funnel_plot_format_function(funnel_plot)
funnel_plot1
time_plot <- data_tot %>%
dplyr::filter(Category=="Unsecured lending") %>%
dplyr::filter(country==str_extract("![](/Users/xo21bm/Documents/Lokaal/BAM2/exploration/notebooks/RO.png) Romania", '\\b\\w+$')) %>%
#dplyr::filter(NewvsCurrent=="Customer") %>%
# dplyr::filter(rank_order==2) %>%
dplyr::filter(Product =="Credit Card") %>%
dplyr::filter(quarter > max(quarter)-1)
time_plot1 <- time_plot_format_function(time_plot)
time_plot1
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q22_time.Rmd", output_file = "draft_Q2_time.html")
funnel_plot <- data_tot %>%
dplyr::filter(Category=="Savings") %>%
dplyr::filter(country=="Romania") %>%
dplyr::filter(quarter == max(quarter, na.rm=T)) %>%
dplyr::filter(Product =="Savings")
funnel_plot1 <- funnel_plot_format_function(funnel_plot)
funnel_plot1
time_plot <- data_tot %>%
dplyr::filter(Category=="Current accounts") %>%
dplyr::filter(country==str_extract("![](/Users/xo21bm/Documents/Lokaal/BAM2/exploration/notebooks/RO.png) Romania", '\\b\\w+$'))
View(time_plot)
time_plot <- data_tot %>%
dplyr::filter(Category=="Current accounts") %>%
dplyr::filter(country==str_extract("![](/Users/xo21bm/Documents/Lokaal/BAM2/exploration/notebooks/RO.png) Romania", '\\b\\w+$')) %>%
#dplyr::filter(NewvsCurrent=="Customer") %>%
# dplyr::filter(rank_order==1) %>%
dplyr::select(Product=="Current accaunts") %>%
dplyr::filter(quarter > max(quarter)-1)
time_plot <- data_tot %>%
dplyr::filter(Category=="Current accounts") %>%
dplyr::filter(country==str_extract("![](/Users/xo21bm/Documents/Lokaal/BAM2/exploration/notebooks/RO.png) Romania", '\\b\\w+$')) %>%
#dplyr::filter(NewvsCurrent=="Customer") %>%
# dplyr::filter(rank_order==1) %>%
dplyr::select(Product=="Current accounts") %>%
dplyr::filter(quarter > max(quarter)-1)
time_plot <- data_tot %>%
dplyr::filter(Category=="Current accounts") %>%
dplyr::filter(country==str_extract("![](/Users/xo21bm/Documents/Lokaal/BAM2/exploration/notebooks/RO.png) Romania", '\\b\\w+$')) %>%
#dplyr::filter(NewvsCurrent=="Customer") %>%
# dplyr::filter(rank_order==1) %>%
dplyr::select(Product=="Current accounts")
time_plot <- data_tot %>%
dplyr::filter(Category=="Current accounts") %>%
dplyr::filter(country==str_extract("![](/Users/xo21bm/Documents/Lokaal/BAM2/exploration/notebooks/RO.png) Romania", '\\b\\w+$')) %>%
#dplyr::filter(NewvsCurrent=="Customer") %>%
# dplyr::filter(rank_order==1) %>%
dplyr::filter(Product=="Current accounts") %>%
dplyr::filter(quarter > max(quarter)-1)
time_plot1 <- time_plot_format_function(time_plot)
View(time_plot)
time_plot <- data_tot %>%
dplyr::filter(Category=="Current accounts") %>%
dplyr::filter(country==str_extract("![](/Users/xo21bm/Documents/Lokaal/BAM2/exploration/notebooks/RO.png) Romania", '\\b\\w+$')) %>%
#dplyr::filter(NewvsCurrent=="Customer") %>%
# dplyr::filter(rank_order==1) %>%
dplyr::filter(Product=="Current accounts") %>%
dplyr::filter(quarter = max(quarter))
time_plot <- data_tot %>%
dplyr::filter(Category=="Current accounts") %>%
dplyr::filter(country==str_extract("![](/Users/xo21bm/Documents/Lokaal/BAM2/exploration/notebooks/RO.png) Romania", '\\b\\w+$')) %>%
#dplyr::filter(NewvsCurrent=="Customer") %>%
# dplyr::filter(rank_order==1) %>%
dplyr::filter(Product=="Current accounts") %>%
dplyr::filter(quarter == max(quarter))
time_plot1 <- time_plot_format_function(time_plot)
time_plot1
rmarkdown::render("/Users/xo21bm/Documents/conversion_reporting/draft_Q22_time.Rmd", output_file = "draft_Q2_time.html")
install.packages("ingmarkdowntemplates")
install.packages("partition_yaml_front_matter")
library(haven)
library(tidyr)
library(tidyverse)
library(magrittr)
library(dplyr)
library(ggplot2)
library(psych)
library(GPArotation)
library(lm.beta)
library(mctest)
library(plotly)
library(dplyr)
library(stringr)
library(rmarkdown)
library(ingmarkdowntemplates)
install.packages("partition_yaml_front_matter")
gc()
library(haven)
library(tidyr)
library(tidyverse)
library(magrittr)
library(dplyr)
library(ggplot2)
library(psych)
library(GPArotation)
library(lm.beta)
library(mctest)
library(plotly)
library(dplyr)
library(stringr)
library(rmarkdown)
library(ingmarkdowntemplates)
